This file is part of MXE. See LICENSE.md for licensing information.

Contains ad hoc patches for cross building.

diff --git a/utilities/CMakeLists.txt b/utilities/CMakeLists.txt
index 1111111..2222222 100644
--- a/utilities/CMakeLists.txt
+++ b/utilities/CMakeLists.txt
@@ -20,12 +20,27 @@
 # along with this program; if not, write to the Free Software
 # Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA
 
+# See https://bugs.mysql.com/bug.php?id=61340
+# See https://gitlab.kitware.com/cmake/community/wikis/doc/cmake/CrossCompiling
+
+# when crosscompiling import the executable targets from a file
+IF(CMAKE_CROSSCOMPILING)
+  SET(IMPORT_COMP_ERR "IMPORTFILE-NOTFOUND"
+  CACHE FILEPATH "Point it to the comp_err file from the native build")
+  INCLUDE(${IMPORT_COMP_ERR})
+ENDIF(CMAKE_CROSSCOMPILING)
+
+# only build the generator if not crosscompiling
+# export the generator target to a file, so it can be imported
+#  (see above) by another build
+# the IF() is not necessary, but makes the intention clearer
 IF(NOT CMAKE_CROSSCOMPILING)
   MYSQL_ADD_EXECUTABLE(comp_err
     comp_err.cc
     LINK_LIBRARIES mysys
     SKIP_INSTALL
     )
+EXPORT(TARGETS comp_err FILE ${CMAKE_BINARY_DIR}/ImportCompErr.cmake)
 ENDIF()
 
 MYSQL_ADD_EXECUTABLE(comp_client_err
diff --git a/strings/CMakeLists.txt b/strings/CMakeLists.txt
index 6a53ddfa..6381c32d 100644
--- a/strings/CMakeLists.txt
+++ b/strings/CMakeLists.txt
@@ -65,7 +65,16 @@ IF(MY_COMPILER_IS_CLANG AND
   ADD_COMPILE_FLAGS(dtoa.cc COMPILE_FLAGS "-fno-strict-aliasing")
 ENDIF()
 
-MYSQL_ADD_EXECUTABLE(uca9dump uca9-dump.cc SKIP_INSTALL)
+IF(CMAKE_CROSSCOMPILING)
+  SET(IMPORT_UCA9DUMP "IMPORTFILE-NOTFOUND"
+  CACHE FILEPATH "Point it to the uca9dump file from the native build")
+  INCLUDE(${IMPORT_UCA9DUMP})
+ENDIF(CMAKE_CROSSCOMPILING)
+
+IF(NOT CMAKE_CROSSCOMPILING)
+  MYSQL_ADD_EXECUTABLE(uca9dump uca9-dump.cc SKIP_INSTALL)
+  EXPORT(TARGETS uca9dump FILE ${CMAKE_BINARY_DIR}/ImportUca9Dump.cmake)
+ENDIF()
 
 SET(ZH_HANS_SRC_FILE ${CMAKE_SOURCE_DIR}/strings/lang_data/zh_hans.txt)
 SET(ZH_HANS_DST_FILE ${CMAKE_BINARY_DIR}/strings/uca900_zh_tbls.cc)
@@ -92,5 +101,14 @@ LIST(APPEND STRINGS_SOURCES ${JA_HANS_DST_FILE} ${ZH_HANS_DST_FILE})
 ADD_DEFINITIONS(-DDISABLE_MYSQL_THREAD_H)
 ADD_CONVENIENCE_LIBRARY(strings ${STRINGS_SOURCES})
 
-MYSQL_ADD_EXECUTABLE(conf_to_src conf_to_src.cc SKIP_INSTALL)
-TARGET_LINK_LIBRARIES(conf_to_src strings)
+IF(CMAKE_CROSSCOMPILING)
+  SET(IMPORT_CONF2SRC "IMPORTFILE-NOTFOUND"
+  CACHE FILEPATH "Point it to the conf_to_src file from the native build")
+  INCLUDE(${IMPORT_CONF2SRC})
+ENDIF(CMAKE_CROSSCOMPILING)
+
+IF(NOT CMAKE_CROSSCOMPILING)
+  MYSQL_ADD_EXECUTABLE(conf_to_src conf_to_src.cc SKIP_INSTALL)
+  TARGET_LINK_LIBRARIES(conf_to_src strings)
+  EXPORT(TARGETS conf_to_src FILE ${CMAKE_BINARY_DIR}/ImportConf2Src.cmake)
+ENDIF()
diff --git a/mysys/my_gethwaddr.cc b/mysys/my_gethwaddr.cc
index 1111111..2222222 100644
--- a/mysys/my_gethwaddr.cc
+++ b/mysys/my_gethwaddr.cc
@@ -154,6 +154,9 @@
 #define VOID void
 #endif
 
+// mprapi.h uses these undefined types
+#define CERT_NAME_BLOB int
+#define CRYPT_HASH_BLOB int
 #include <iphlpapi.h>
 
 /*
From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: "fix@me" <fix@me>
Date: Mon, 7 Sep 2015 22:59:18 +0100
Subject: [PATCH 03/12] fix case in headers and libs (should be lowercase)


diff --git a/include/mysql/psi/mysql_socket.h b/include/mysql/psi/mysql_socket.h
index 1111111..2222222 100644
--- a/include/mysql/psi/mysql_socket.h
+++ b/include/mysql/psi/mysql_socket.h
@@ -39,7 +39,7 @@
 #include "mysql/psi/psi_socket.h"
 /* For socket api */
 #ifdef _WIN32
-#include <MSWSock.h>
+#include <mswsock.h>
 #ifdef WIN32_LEAN_AND_MEAN
 #include <winsock2.h>
 #include <ws2def.h>
diff --git a/libmysql/authentication_win/CMakeLists.txt b/libmysql/authentication_win/CMakeLists.txt
index 1111111..2222222 100644
--- a/libmysql/authentication_win/CMakeLists.txt
+++ b/libmysql/authentication_win/CMakeLists.txt
@@ -39,7 +39,7 @@
   )
 
 ADD_CONVENIENCE_LIBRARY(auth_win_client ${PLUGIN_SOURCES} ${HEADERS}
-  LINK_LIBRARIES Secur32)
+  LINK_LIBRARIES secur32)
 
 # In IDE, group headers in a separate folder.
 
diff --git a/libmysql/authentication_win/plugin_client.cc b/libmysql/authentication_win/plugin_client.cc
index 1111111..2222222 100644
--- a/libmysql/authentication_win/plugin_client.cc
+++ b/libmysql/authentication_win/plugin_client.cc
@@ -32,7 +32,7 @@
 */
 
 #ifdef _MSC_VER
-#pragma comment(lib, "Secur32")
+#pragma comment(lib, "secur32")
 #endif
 
 static int win_auth_client_plugin_init(char *, size_t, int, va_list) {

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: "fix@me" <fix@me>
Date: Mon, 7 Sep 2015 23:04:23 +0100
Subject: [PATCH 05/12] macro _MSC_VER for stuff we don't have here

Macro _MSC_VER is undefined in MXE. It is used instead of _WIN32
in #ifdef's where working variant is Unix and not Win32:

 * MXE has strtok_r, but not strtok_s
 * MXE has sigset_t, mode_t timespec defined (do not redefine)
 * MXE has Unix-like stacktrace reader

diff --git a/include/m_string.h b/include/m_string.h
index 1111111..2222222 100644
--- a/include/m_string.h
+++ b/include/m_string.h
@@ -208,7 +208,7 @@
 }
 
 static inline char *my_strtok_r(char *str, const char *delim, char **saveptr) {
-#if defined _WIN32
+#ifdef _MSC_VER
   return strtok_s(str, delim, saveptr);
 #else
   return strtok_r(str, delim, saveptr);
diff --git a/mysys/stacktrace.cc b/mysys/stacktrace.cc
index 1111111..2222222 100644
--- a/mysys/stacktrace.cc
+++ b/mysys/stacktrace.cc
@@ -47,7 +47,7 @@
 #include "my_macros.h"
 #include "my_stacktrace.h"
 
-#ifndef _WIN32
+#ifndef _MSC_VER
 #include <signal.h>

 #include "my_thread.h"

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: "fix@me" <fix@me>
Date: Thu, 8 Oct 2015 13:30:53 +1100
Subject: [PATCH 06/12] fix shared lib names


diff --git a/libmysql/CMakeLists.txt b/libmysql/CMakeLists.txt
index 1111111..2222222 100644
--- a/libmysql/CMakeLists.txt
+++ b/libmysql/CMakeLists.txt
@@ -265,7 +265,7 @@
   ENDIF()
 ENDIF()
 
-IF(UNIX)
+IF(UNIX OR MINGW)
   MACRO(GET_VERSIONED_LIBNAME LIBNAME EXTENSION VERSION OUTNAME)
     SET(DOT_VERSION ".${VERSION}")
     IF(DOT_VERSION STREQUAL ".") 
@@ -298,7 +298,7 @@
       )
   ENDIF()
 
-IF(UNIX)
+IF(UNIX OR MINGW)
   # libtool compatability
   IF(FREEBSD OR APPLE)
     SET(OS_SHARED_LIB_VERSION "${SHARED_LIB_MAJOR_VERSION}")

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: "fix@me" <fix@me>
Date: Thu, 8 Oct 2015 19:36:35 +1100
Subject: [PATCH 07/12] allow install of mysql_config
From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Boris Nagaev <bnagaev@gmail.com>
Date: Wed, 16 Dec 2015 17:39:28 +0100
Subject: [PATCH 09/12] fix CMake error if dir contains special regex char

See https://github.com/mxe/mxe/issues/1030

diff --git a/scripts/CMakeLists.txt b/scripts/CMakeLists.txt
index 1111111..2222222 100644
--- a/scripts/CMakeLists.txt
+++ b/scripts/CMakeLists.txt
@@ -22,7 +22,16 @@
 
 ADD_SUBDIRECTORY(sys_schema)
 
-MYSQL_ADD_EXECUTABLE(comp_sql comp_sql.cc SKIP_INSTALL)
+IF(CMAKE_CROSSCOMPILING)
+  SET(IMPORT_COMP_SQL "IMPORTFILE-NOTFOUND"
+  CACHE FILEPATH "Point it to the comp_sql file from the native build")
+  INCLUDE(${IMPORT_COMP_SQL})
+ENDIF(CMAKE_CROSSCOMPILING)
+
+IF(NOT CMAKE_CROSSCOMPILING)
+  MYSQL_ADD_EXECUTABLE(comp_sql comp_sql.cc SKIP_INSTALL)
+  EXPORT(TARGETS comp_sql FILE ${CMAKE_BINARY_DIR}/ImportCompSql.cmake)
+ENDIF()
 
 # Add compiler information, for easier debugging of output from mysql_config.
 SET(COMPILER_ID_AND_VERSION
@@ -327,7 +336,10 @@ MACRO(EXTRACT_LINK_LIBRARIES target var)
     LIST(REMOVE_DUPLICATES ${target}_LIB_DEPENDS)
     FOREACH(lib ${${target}_LIB_DEPENDS})
       # Filter out "general", it is not a library, just CMake hint
-      IF(NOT lib STREQUAL "general" AND NOT ${var}  MATCHES "-l${lib} ")
+      # To check if "${var}" contains "-l${lib} ", use replace
+      # can't use MATCHES because ${lib} may contain special chars.
+      STRING(REPLACE "-l${lib} " "" var_repl ${var})
+      IF(NOT lib STREQUAL "general" AND ${var} STREQUAL ${var_repl})
         IF (lib MATCHES "^\\-l")
           SET(${var} "${${var}} ${lib} ") 
         ELSEIF (lib MATCHES "^\\-L")
@@ -388,7 +400,7 @@ MESSAGE(STATUS "CONFIG_LIBS_PRIVATE ${CONFIG_LIBS_PRIVATE}")
 
 SET(mysql_config_COMPONENT Development)
 
-IF(WIN32)
+IF(WIN32 AND NOT MINGW)
   # On Windows, some .sh and some .pl.in files are configured
   # The resulting files will have .pl extension (those are perl scripts)
 
From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: "fix@me" <fix@me>
Date: Fri, 13 Nov 2015 10:22:12 -0500
Subject: [PATCH 10/12] For Windows, check if POSIX thread model or win32
 thread model is being used.


diff --git a/configure.cmake b/configure.cmake
index 1111111..2222222 100644
--- a/configure.cmake
+++ b/configure.cmake
@@ -233,6 +233,7 @@ CHECK_INCLUDE_FILES (fnmatch.h HAVE_FNMATCH_H)
 CHECK_INCLUDE_FILES (sys/un.h HAVE_SYS_UN_H)
 CHECK_INCLUDE_FILES (vis.h HAVE_VIS_H) # Used by libedit
 CHECK_INCLUDE_FILES (sasl/sasl.h HAVE_SASL_SASL_H) # Used by memcached
+CHECK_INCLUDE_FILES (pthread.h HAVE_PTHREAD_H)
 
 # For libevent
 CHECK_INCLUDE_FILES(sys/devpoll.h HAVE_DEVPOLL)
From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Mark Brand <mabrand@mabrand.nl>
Date: Mon, 17 Sep 2018 11:04:30 +0200
Subject: [PATCH 12/12] mingw-w64 6 fix


diff --git a/mysys/my_gethwaddr.cc b/mysys/my_gethwaddr.cc
index 1111111..2222222 100644
--- a/mysys/my_gethwaddr.cc
+++ b/mysys/my_gethwaddr.cc
@@ -137,9 +137,11 @@
 #define VOID void
 #endif
 
+#if __MINGW64_VERSION_MAJOR < 6
 // mprapi.h uses these undefined types
 #define CERT_NAME_BLOB int
 #define CRYPT_HASH_BLOB int
+#endif
 #include <iphlpapi.h>
 
 /*
