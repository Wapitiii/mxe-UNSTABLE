diff --git a/crypto/armcap.c b/crypto/armcap.c
index 58e54f0d..7b82a347 100644
--- a/crypto/armcap.c
+++ b/crypto/armcap.c
@@ -29,6 +29,7 @@ uint32_t OPENSSL_rdtsc(void)
     return 0;
 }
 #else
+#ifdef _POSIX
 static sigset_t all_masked;
 
 static sigjmp_buf ill_jmp;
@@ -36,6 +37,7 @@ static void ill_handler(int sig)
 {
     siglongjmp(ill_jmp, sig);
 }
+#endif
 
 /*
  * Following subroutines could have been inlined, but it's not all
@@ -100,6 +102,21 @@ void OPENSSL_cpuid_setup(void) __attribute__ ((constructor));
 
 void OPENSSL_cpuid_setup(void)
 {
+# if (defined(_WIN32) && !defined(_WIN64)) || (defined(__APPLE__) && !defined(__aarch64__))
+    /*
+     * Capability probing by catching SIGILL appears to be problematic
+     * on iOS. But since Apple universe is "monocultural", it's actually
+     * possible to simply set pre-defined processor capability mask.
+     */
+    OPENSSL_armcap_P = ARMV7_NEON;
+    return;
+    /*
+     * One could do same even for __aarch64__ iOS builds. It's not done
+     * exclusively for reasons of keeping code unified across platforms.
+     * Unified code works because it never triggers SIGILL on Apple
+     * devices...
+     */
+# else
     const char *e;
     struct sigaction ill_oact, ill_act;
     sigset_t oset;
@@ -114,24 +131,6 @@ void OPENSSL_cpuid_setup(void)
         return;
     }
 
-# if defined(__APPLE__) && !defined(__aarch64__)
-    /*
-     * Capability probing by catching SIGILL appears to be problematic
-     * on iOS. But since Apple universe is "monocultural", it's actually
-     * possible to simply set pre-defined processor capability mask.
-     */
-    if (1) {
-        OPENSSL_armcap_P = ARMV7_NEON;
-        return;
-    }
-    /*
-     * One could do same even for __aarch64__ iOS builds. It's not done
-     * exclusively for reasons of keeping code unified across platforms.
-     * Unified code works because it never triggers SIGILL on Apple
-     * devices...
-     */
-# endif
-
     OPENSSL_armcap_P = 0;
 
 # ifdef OSSL_IMPLEMENT_GETAUXVAL
@@ -210,5 +209,6 @@ void OPENSSL_cpuid_setup(void)
 
     sigaction(SIGILL, &ill_oact, NULL);
     sigprocmask(SIG_SETMASK, &oset, NULL);
+# endif
 }
 #endif
diff --git a/crypto/armv4cpuid.S b/crypto/armv4cpuid.S
index 8e794cdc..1163f74e 100644
--- a/crypto/armv4cpuid.pl
+++ b/crypto/armv4cpuid.pl
@@ -288,8 +288,10 @@
 .word  0
 #endif

-.comm	OPENSSL_armcap_P,4,4
-.hidden	OPENSSL_armcap_P
+# if (!defined(_WIN32) || defined(_WIN64)) && (!defined(__APPLE__) || defined(__aarch64__))
+.comm	OPENSSL_armcap_P,4,4
+.hidden	OPENSSL_armcap_P
+# endif
 ___

 print $code;
