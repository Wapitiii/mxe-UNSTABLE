diff --git a/test/utils-prng.c b/test/utils-prng.c
index c27b5be8..3555f3dd 100644
--- a/test/utils-prng.c
+++ b/test/utils-prng.c
@@ -27,9 +27,13 @@
 #include "utils.h"
 #include "utils-prng.h"
 
-#if defined(HAVE_GCC_VECTOR_EXTENSIONS) && defined(__SSE2__)
+#if defined(HAVE_GCC_VECTOR_EXTENSIONS)
+#if defined(__SSE2__)
 #include <xmmintrin.h>
-#endif
+#elif defined(__ARM_NEON)
+#include <arm_neon.h>
+#endif // __ARM_NEON
+#endif // HAVE_GCC_VECTOR_EXTENSIONS
 
 void smallprng_srand_r (smallprng_t *x, uint32_t seed)
 {
@@ -200,11 +204,16 @@ randmemset_internal (prng_t                  *prng,
         else
         {
 #ifdef HAVE_GCC_VECTOR_EXTENSIONS
+#ifdef __ARM_NEON
+            // no shuffle in CLang, though VTBL could implement it generically
+            randdata.vb = vrev32q_u8(randdata.vb);
+#else
             const uint8x16 bswap_shufflemask =
             {
                 3, 2, 1, 0, 7, 6, 5, 4, 11, 10, 9, 8, 15, 14, 13, 12
             };
             randdata.vb = __builtin_shuffle (randdata.vb, bswap_shufflemask);
+#endif
             store_rand_128_data (buf, &randdata, aligned);
             buf += 16;
 #else
